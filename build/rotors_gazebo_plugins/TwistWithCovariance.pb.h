// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TwistWithCovariance.proto

#ifndef PROTOBUF_INCLUDED_TwistWithCovariance_2eproto
#define PROTOBUF_INCLUDED_TwistWithCovariance_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Twist.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_TwistWithCovariance_2eproto 

namespace protobuf_TwistWithCovariance_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_TwistWithCovariance_2eproto
namespace gz_geometry_msgs {
class TwistWithCovariance;
class TwistWithCovarianceDefaultTypeInternal;
extern TwistWithCovarianceDefaultTypeInternal _TwistWithCovariance_default_instance_;
}  // namespace gz_geometry_msgs
namespace google {
namespace protobuf {
template<> ::gz_geometry_msgs::TwistWithCovariance* Arena::CreateMaybeMessage<::gz_geometry_msgs::TwistWithCovariance>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gz_geometry_msgs {

// ===================================================================

class TwistWithCovariance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz_geometry_msgs.TwistWithCovariance) */ {
 public:
  TwistWithCovariance();
  virtual ~TwistWithCovariance();

  TwistWithCovariance(const TwistWithCovariance& from);

  inline TwistWithCovariance& operator=(const TwistWithCovariance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TwistWithCovariance(TwistWithCovariance&& from) noexcept
    : TwistWithCovariance() {
    *this = ::std::move(from);
  }

  inline TwistWithCovariance& operator=(TwistWithCovariance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TwistWithCovariance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TwistWithCovariance* internal_default_instance() {
    return reinterpret_cast<const TwistWithCovariance*>(
               &_TwistWithCovariance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TwistWithCovariance* other);
  friend void swap(TwistWithCovariance& a, TwistWithCovariance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TwistWithCovariance* New() const final {
    return CreateMaybeMessage<TwistWithCovariance>(NULL);
  }

  TwistWithCovariance* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TwistWithCovariance>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TwistWithCovariance& from);
  void MergeFrom(const TwistWithCovariance& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TwistWithCovariance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double covariance = 2 [packed = true];
  int covariance_size() const;
  void clear_covariance();
  static const int kCovarianceFieldNumber = 2;
  double covariance(int index) const;
  void set_covariance(int index, double value);
  void add_covariance(double value);
  const ::google::protobuf::RepeatedField< double >&
      covariance() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_covariance();

  // required .gz_geometry_msgs.Twist twist = 1;
  bool has_twist() const;
  void clear_twist();
  static const int kTwistFieldNumber = 1;
  private:
  const ::gz_geometry_msgs::Twist& _internal_twist() const;
  public:
  const ::gz_geometry_msgs::Twist& twist() const;
  ::gz_geometry_msgs::Twist* release_twist();
  ::gz_geometry_msgs::Twist* mutable_twist();
  void set_allocated_twist(::gz_geometry_msgs::Twist* twist);

  // @@protoc_insertion_point(class_scope:gz_geometry_msgs.TwistWithCovariance)
 private:
  void set_has_twist();
  void clear_has_twist();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< double > covariance_;
  mutable int _covariance_cached_byte_size_;
  ::gz_geometry_msgs::Twist* twist_;
  friend struct ::protobuf_TwistWithCovariance_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TwistWithCovariance

// required .gz_geometry_msgs.Twist twist = 1;
inline bool TwistWithCovariance::has_twist() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TwistWithCovariance::set_has_twist() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TwistWithCovariance::clear_has_twist() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::gz_geometry_msgs::Twist& TwistWithCovariance::_internal_twist() const {
  return *twist_;
}
inline const ::gz_geometry_msgs::Twist& TwistWithCovariance::twist() const {
  const ::gz_geometry_msgs::Twist* p = twist_;
  // @@protoc_insertion_point(field_get:gz_geometry_msgs.TwistWithCovariance.twist)
  return p != NULL ? *p : *reinterpret_cast<const ::gz_geometry_msgs::Twist*>(
      &::gz_geometry_msgs::_Twist_default_instance_);
}
inline ::gz_geometry_msgs::Twist* TwistWithCovariance::release_twist() {
  // @@protoc_insertion_point(field_release:gz_geometry_msgs.TwistWithCovariance.twist)
  clear_has_twist();
  ::gz_geometry_msgs::Twist* temp = twist_;
  twist_ = NULL;
  return temp;
}
inline ::gz_geometry_msgs::Twist* TwistWithCovariance::mutable_twist() {
  set_has_twist();
  if (twist_ == NULL) {
    auto* p = CreateMaybeMessage<::gz_geometry_msgs::Twist>(GetArenaNoVirtual());
    twist_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz_geometry_msgs.TwistWithCovariance.twist)
  return twist_;
}
inline void TwistWithCovariance::set_allocated_twist(::gz_geometry_msgs::Twist* twist) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(twist_);
  }
  if (twist) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      twist = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, twist, submessage_arena);
    }
    set_has_twist();
  } else {
    clear_has_twist();
  }
  twist_ = twist;
  // @@protoc_insertion_point(field_set_allocated:gz_geometry_msgs.TwistWithCovariance.twist)
}

// repeated double covariance = 2 [packed = true];
inline int TwistWithCovariance::covariance_size() const {
  return covariance_.size();
}
inline void TwistWithCovariance::clear_covariance() {
  covariance_.Clear();
}
inline double TwistWithCovariance::covariance(int index) const {
  // @@protoc_insertion_point(field_get:gz_geometry_msgs.TwistWithCovariance.covariance)
  return covariance_.Get(index);
}
inline void TwistWithCovariance::set_covariance(int index, double value) {
  covariance_.Set(index, value);
  // @@protoc_insertion_point(field_set:gz_geometry_msgs.TwistWithCovariance.covariance)
}
inline void TwistWithCovariance::add_covariance(double value) {
  covariance_.Add(value);
  // @@protoc_insertion_point(field_add:gz_geometry_msgs.TwistWithCovariance.covariance)
}
inline const ::google::protobuf::RepeatedField< double >&
TwistWithCovariance::covariance() const {
  // @@protoc_insertion_point(field_list:gz_geometry_msgs.TwistWithCovariance.covariance)
  return covariance_;
}
inline ::google::protobuf::RepeatedField< double >*
TwistWithCovariance::mutable_covariance() {
  // @@protoc_insertion_point(field_mutable_list:gz_geometry_msgs.TwistWithCovariance.covariance)
  return &covariance_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace gz_geometry_msgs

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_TwistWithCovariance_2eproto
